/*******************************************************************************
 * Size: 32 px
 * Bpp: 1
 * Opts: --bpp 1 --size 32 --no-compress --use-color-info --font UbuntuMono-Bold.ttf --symbols ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890-'  --format lvgl -o ubuntu_32.c
 ******************************************************************************/
#ifndef UBUNTU_32
#define UBUNTU_32 1
#endif

#if UBUNTU_32

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap_u32[] = {
    /* U+0020 " " */
    0x0,

    /* U+0027 "'" */
    0xff, 0xff, 0xff, 0xf7, 0x66,

    /* U+002D "-" */
    0xff, 0xff, 0xff, 0xe0,

    /* U+0030 "0" */
    0xf, 0xc0, 0x7f, 0x83, 0xff, 0x1f, 0x3e, 0x78,
    0x79, 0xe1, 0xef, 0x3, 0xfc, 0xf, 0xf7, 0x3f,
    0xde, 0xff, 0x7b, 0xfc, 0xf, 0xf0, 0x3f, 0xc0,
    0xff, 0x3, 0xde, 0x1e, 0x78, 0x79, 0xf3, 0xe3,
    0xff, 0x7, 0xf8, 0xf, 0xc0,

    /* U+0031 "1" */
    0x3, 0x80, 0x3c, 0x7, 0xe0, 0x7f, 0xf, 0xf8,
    0x7f, 0xc1, 0xde, 0x8, 0xf0, 0x7, 0x80, 0x3c,
    0x1, 0xe0, 0xf, 0x0, 0x78, 0x3, 0xc0, 0x1e,
    0x0, 0xf0, 0x7, 0x80, 0x3c, 0x1f, 0xfe, 0xff,
    0xf7, 0xff, 0x80,

    /* U+0032 "2" */
    0x1f, 0x3, 0xfe, 0x3f, 0xf9, 0xe3, 0xe4, 0xf,
    0x0, 0x78, 0x3, 0xc0, 0x3e, 0x1, 0xe0, 0x1f,
    0x1, 0xf0, 0x1f, 0x1, 0xf8, 0x1f, 0x81, 0xf8,
    0xf, 0x80, 0xf8, 0x7, 0xc0, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0x80,

    /* U+0033 "3" */
    0x3f, 0x87, 0xfe, 0x3f, 0xf8, 0xc3, 0xe0, 0xf,
    0x0, 0x78, 0x3, 0xc0, 0x3c, 0x1f, 0xe0, 0xfe,
    0x7, 0xfc, 0x3, 0xe0, 0xf, 0x80, 0x3c, 0x1,
    0xe0, 0xf, 0x0, 0xfe, 0xf, 0xbf, 0xfd, 0xff,
    0xc7, 0xf8, 0x0,

    /* U+0034 "4" */
    0x0, 0xf0, 0x7, 0xc0, 0x3f, 0x0, 0xfc, 0x7,
    0xf0, 0x3f, 0xc0, 0xef, 0x7, 0xbc, 0x3c, 0xf0,
    0xe3, 0xc7, 0x8f, 0x1c, 0x3c, 0xf0, 0xf3, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x0, 0xf0, 0x3, 0xc0,
    0xf, 0x0, 0x3c, 0x0, 0xf0,

    /* U+0035 "5" */
    0x3f, 0xf1, 0xff, 0x8f, 0xfc, 0x70, 0x3, 0x80,
    0x1c, 0x0, 0xe0, 0x7, 0x0, 0x7f, 0xc3, 0xff,
    0x1f, 0xfc, 0x3, 0xf0, 0xf, 0x80, 0x3c, 0x1,
    0xe0, 0xf, 0x0, 0x7e, 0xf, 0xbf, 0xfd, 0xff,
    0xc7, 0xf8, 0x0,

    /* U+0036 "6" */
    0x0, 0xf0, 0x3f, 0x83, 0xfc, 0x3f, 0x3, 0xe0,
    0x3e, 0x1, 0xe0, 0xf, 0x0, 0xff, 0xc7, 0xff,
    0x3f, 0xfd, 0xe1, 0xff, 0x7, 0xf8, 0x3f, 0xc1,
    0xfe, 0xf, 0x78, 0x7b, 0xc7, 0x9f, 0xfc, 0x7f,
    0xc0, 0xf8, 0x0,

    /* U+0037 "7" */
    0xff, 0xff, 0xff, 0xff, 0xfe, 0x1, 0xe0, 0xf,
    0x0, 0xf0, 0x7, 0x80, 0x78, 0x3, 0xc0, 0x1c,
    0x1, 0xe0, 0xf, 0x0, 0x70, 0x7, 0x80, 0x3c,
    0x1, 0xe0, 0xe, 0x0, 0xf0, 0x7, 0x80, 0x3c,
    0x1, 0xe0, 0x0,

    /* U+0038 "8" */
    0xf, 0xc0, 0xff, 0x87, 0xff, 0x3e, 0x3e, 0xf0,
    0x7b, 0xc1, 0xef, 0x7, 0xbe, 0x3e, 0x7c, 0xf0,
    0xff, 0x81, 0xfe, 0xf, 0xfc, 0x79, 0xfb, 0xc1,
    0xff, 0x3, 0xfc, 0xf, 0xf0, 0x3f, 0xe1, 0xf7,
    0xff, 0x8f, 0xfc, 0xf, 0xc0,

    /* U+0039 "9" */
    0xf, 0x81, 0xff, 0x1f, 0xf8, 0xf1, 0xef, 0xf,
    0x78, 0x3f, 0xc1, 0xfe, 0xf, 0xf0, 0x7f, 0xc3,
    0xdf, 0xfe, 0x7f, 0xf1, 0xff, 0x80, 0x78, 0x3,
    0xc0, 0x3e, 0x3, 0xe0, 0x7e, 0x1f, 0xe0, 0xfe,
    0x7, 0x80, 0x0,

    /* U+0041 "A" */
    0x3, 0xc0, 0x7, 0xe0, 0x7, 0xe0, 0x7, 0xe0,
    0x7, 0xf0, 0xf, 0xf0, 0xe, 0xf0, 0xe, 0x70,
    0x1e, 0x78, 0x1e, 0x78, 0x1c, 0x78, 0x1c, 0x38,
    0x3c, 0x3c, 0x3f, 0xfc, 0x3f, 0xfc, 0x3f, 0xfc,
    0x78, 0x1e, 0x78, 0x1e, 0x78, 0x1e, 0x78, 0x1e,
    0xf0, 0x1f,

    /* U+0042 "B" */
    0xff, 0x87, 0xfe, 0x3f, 0xf9, 0xe3, 0xef, 0xf,
    0x78, 0x7b, 0xc3, 0xde, 0x1e, 0xf1, 0xe7, 0xfe,
    0x3f, 0xf1, 0xff, 0xef, 0xf, 0x78, 0x3f, 0xc1,
    0xfe, 0xf, 0xf0, 0x7f, 0x87, 0xff, 0xfd, 0xff,
    0xcf, 0xf8, 0x0,

    /* U+0043 "C" */
    0x3, 0xf0, 0x3f, 0xf1, 0xff, 0xcf, 0x82, 0x7c,
    0x1, 0xe0, 0x7, 0x80, 0x3c, 0x0, 0xf0, 0x3,
    0xc0, 0xf, 0x0, 0x3c, 0x0, 0xf0, 0x3, 0xc0,
    0xf, 0x0, 0x1e, 0x0, 0x78, 0x0, 0xf8, 0x23,
    0xff, 0xc7, 0xff, 0x7, 0xf0,

    /* U+0044 "D" */
    0xff, 0x7, 0xfe, 0x3f, 0xf9, 0xe3, 0xcf, 0xf,
    0x78, 0x7b, 0xc1, 0xfe, 0xf, 0xf0, 0x7f, 0x83,
    0xfc, 0x1f, 0xe0, 0xff, 0x7, 0xf8, 0x3f, 0xc1,
    0xfe, 0x1e, 0xf0, 0xf7, 0x8f, 0x3f, 0xf9, 0xff,
    0xf, 0xe0, 0x0,

    /* U+0045 "E" */
    0xff, 0xf7, 0xff, 0xbf, 0xfd, 0xe0, 0xf, 0x0,
    0x78, 0x3, 0xc0, 0x1e, 0x0, 0xf0, 0x7, 0xff,
    0x3f, 0xf9, 0xff, 0xcf, 0x0, 0x78, 0x3, 0xc0,
    0x1e, 0x0, 0xf0, 0x7, 0x80, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0x80,

    /* U+0046 "F" */
    0xff, 0xff, 0xff, 0xff, 0xff, 0x0, 0xf0, 0xf,
    0x0, 0xf0, 0xf, 0x0, 0xf0, 0xf, 0xfe, 0xff,
    0xef, 0xfe, 0xf0, 0xf, 0x0, 0xf0, 0xf, 0x0,
    0xf0, 0xf, 0x0, 0xf0, 0xf, 0x0, 0xf0, 0x0,

    /* U+0047 "G" */
    0x3, 0xf0, 0x3f, 0xf1, 0xff, 0xcf, 0x82, 0x7c,
    0x1, 0xe0, 0xf, 0x80, 0x3c, 0x0, 0xf0, 0x3,
    0xc0, 0xf, 0x3, 0xfc, 0xf, 0xf0, 0x3f, 0xc0,
    0xff, 0x3, 0xde, 0xf, 0x78, 0x3c, 0xf0, 0xf3,
    0xff, 0xc7, 0xff, 0x7, 0xf8,

    /* U+0048 "H" */
    0xf0, 0x7f, 0x83, 0xfc, 0x1f, 0xe0, 0xff, 0x7,
    0xf8, 0x3f, 0xc1, 0xfe, 0xf, 0xf0, 0x7f, 0xff,
    0xff, 0xff, 0xff, 0xff, 0x7, 0xf8, 0x3f, 0xc1,
    0xfe, 0xf, 0xf0, 0x7f, 0x83, 0xfc, 0x1f, 0xe0,
    0xff, 0x7, 0x80,

    /* U+0049 "I" */
    0xff, 0xff, 0xff, 0xff, 0xfe, 0x1e, 0x0, 0xf0,
    0x7, 0x80, 0x3c, 0x1, 0xe0, 0xf, 0x0, 0x78,
    0x3, 0xc0, 0x1e, 0x0, 0xf0, 0x7, 0x80, 0x3c,
    0x1, 0xe0, 0xf, 0x0, 0x78, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0x80,

    /* U+004A "J" */
    0x3f, 0xf9, 0xff, 0xcf, 0xfe, 0x0, 0xf0, 0x7,
    0x80, 0x3c, 0x1, 0xe0, 0xf, 0x0, 0x78, 0x3,
    0xc0, 0x1e, 0x0, 0xf0, 0x7, 0x80, 0x3c, 0x1,
    0xe0, 0xf, 0x0, 0xfb, 0x87, 0x9f, 0xfd, 0xff,
    0xc3, 0xf8, 0x0,

    /* U+004B "K" */
    0xf0, 0x7b, 0xc3, 0xef, 0xf, 0x3c, 0x7c, 0xf1,
    0xe3, 0xcf, 0xf, 0x3c, 0x3d, 0xe0, 0xff, 0x3,
    0xfc, 0xf, 0xf0, 0x3f, 0xe0, 0xf7, 0xc3, 0xcf,
    0x8f, 0x1e, 0x3c, 0x7c, 0xf0, 0xf3, 0xc3, 0xef,
    0x7, 0xbc, 0x1f, 0xf0, 0x3c,

    /* U+004C "L" */
    0xf0, 0x7, 0x80, 0x3c, 0x1, 0xe0, 0xf, 0x0,
    0x78, 0x3, 0xc0, 0x1e, 0x0, 0xf0, 0x7, 0x80,
    0x3c, 0x1, 0xe0, 0xf, 0x0, 0x78, 0x3, 0xc0,
    0x1e, 0x0, 0xf0, 0x7, 0x80, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0x80,

    /* U+004D "M" */
    0x70, 0x39, 0xc1, 0xef, 0x87, 0xbe, 0x1f, 0xf8,
    0x7f, 0xf3, 0xff, 0xcf, 0xfb, 0x37, 0xef, 0xdf,
    0xbf, 0x7e, 0x79, 0xf9, 0xe7, 0xe7, 0x9f, 0x9e,
    0x7e, 0x1, 0xf8, 0x7, 0xe0, 0x1f, 0x80, 0x7e,
    0x1, 0xf8, 0x7, 0xe0, 0x1c,

    /* U+004E "N" */
    0xf0, 0x7f, 0x83, 0xfe, 0x1f, 0xf0, 0xff, 0xc7,
    0xfe, 0x3f, 0xf9, 0xff, 0xcf, 0xf6, 0x7f, 0xbb,
    0xfd, 0xdf, 0xe6, 0xff, 0x3f, 0xf8, 0xff, 0xc7,
    0xfe, 0x3f, 0xf0, 0xff, 0x87, 0xfc, 0x1f, 0xe0,
    0xff, 0x7, 0x80,

    /* U+004F "O" */
    0xf, 0xc0, 0x7f, 0x83, 0xff, 0x1f, 0x3e, 0x78,
    0x79, 0xc0, 0xef, 0x3, 0xfc, 0xf, 0xf0, 0x3f,
    0xc0, 0xff, 0x3, 0xfc, 0xf, 0xf0, 0x3f, 0xc0,
    0xff, 0x3, 0xdc, 0xe, 0x78, 0x79, 0xf3, 0xe3,
    0xff, 0x7, 0xf8, 0xf, 0xc0,

    /* U+0050 "P" */
    0xff, 0x87, 0xff, 0x3f, 0xfd, 0xe1, 0xef, 0x7,
    0xf8, 0x3f, 0xc1, 0xfe, 0xf, 0xf0, 0x7f, 0x87,
    0xfc, 0x3d, 0xff, 0xef, 0xfe, 0x7f, 0xc3, 0xc0,
    0x1e, 0x0, 0xf0, 0x7, 0x80, 0x3c, 0x1, 0xe0,
    0xf, 0x0, 0x0,

    /* U+0051 "Q" */
    0xf, 0xc0, 0x7f, 0x83, 0xff, 0x1f, 0x3e, 0x78,
    0x79, 0xc0, 0xef, 0x3, 0xfc, 0xf, 0xf0, 0x3f,
    0xc0, 0xff, 0x3, 0xfc, 0xf, 0xf0, 0x3f, 0xc0,
    0xff, 0x3, 0xde, 0x1e, 0x78, 0x79, 0xff, 0xe3,
    0xff, 0x7, 0xf8, 0xf, 0xc0, 0x1e, 0x0, 0x3e,
    0x0, 0xff, 0x0, 0xf8, 0x0, 0xe0,

    /* U+0052 "R" */
    0xff, 0x83, 0xff, 0x8f, 0xff, 0x3c, 0x7c, 0xf0,
    0xfb, 0xc1, 0xef, 0x7, 0xbc, 0x1e, 0xf0, 0xfb,
    0xc7, 0xcf, 0xff, 0x3f, 0xf8, 0xff, 0xc3, 0xcf,
    0x8f, 0x1e, 0x3c, 0x3c, 0xf0, 0xf3, 0xc1, 0xef,
    0x7, 0xbc, 0xf, 0xf0, 0x3c,

    /* U+0053 "S" */
    0xf, 0xc1, 0xff, 0x9f, 0xfd, 0xf0, 0x4f, 0x0,
    0x78, 0x3, 0xc0, 0x1f, 0x80, 0xff, 0x3, 0xfe,
    0xf, 0xf8, 0x1f, 0xe0, 0x3f, 0x80, 0x7c, 0x1,
    0xe0, 0xf, 0x0, 0x7f, 0x7, 0xff, 0xfd, 0xff,
    0xc3, 0xf8, 0x0,

    /* U+0054 "T" */
    0xff, 0xff, 0xff, 0xff, 0xff, 0xc1, 0xe0, 0x7,
    0x80, 0x1e, 0x0, 0x78, 0x1, 0xe0, 0x7, 0x80,
    0x1e, 0x0, 0x78, 0x1, 0xe0, 0x7, 0x80, 0x1e,
    0x0, 0x78, 0x1, 0xe0, 0x7, 0x80, 0x1e, 0x0,
    0x78, 0x1, 0xe0, 0x7, 0x80,

    /* U+0055 "U" */
    0xf0, 0x3f, 0xc0, 0xff, 0x3, 0xfc, 0xf, 0xf0,
    0x3f, 0xc0, 0xff, 0x3, 0xfc, 0xf, 0xf0, 0x3f,
    0xc0, 0xff, 0x3, 0xfc, 0xf, 0xf0, 0x3f, 0xc0,
    0xff, 0x3, 0xfc, 0xf, 0xf0, 0x3d, 0xe1, 0xe7,
    0xff, 0x8f, 0xfc, 0xf, 0xc0,

    /* U+0056 "V" */
    0xf8, 0x1f, 0x78, 0x1e, 0x78, 0x1e, 0x78, 0x1e,
    0x78, 0x1e, 0x38, 0x1c, 0x3c, 0x3c, 0x3c, 0x3c,
    0x3c, 0x3c, 0x1c, 0x38, 0x1c, 0x38, 0x1e, 0x78,
    0x1e, 0x78, 0xe, 0x70, 0xe, 0x70, 0xf, 0xf0,
    0x7, 0xe0, 0x7, 0xe0, 0x7, 0xe0, 0x7, 0xe0,
    0x3, 0xc0,

    /* U+0057 "W" */
    0xf0, 0x1f, 0xc0, 0x7f, 0x1, 0xfc, 0x7, 0xf0,
    0x1f, 0xc0, 0x7f, 0x1, 0xfc, 0xe7, 0xf3, 0x9f,
    0xce, 0x7f, 0x7d, 0xfd, 0xf7, 0xf6, 0xdf, 0xdb,
    0x7f, 0xef, 0xff, 0x1f, 0xfc, 0x7d, 0xf1, 0xf7,
    0xc7, 0xde, 0xe, 0x78, 0x38,

    /* U+0058 "X" */
    0x78, 0x1e, 0x7c, 0x1e, 0x3c, 0x3c, 0x3e, 0x3c,
    0x1e, 0x78, 0xf, 0x70, 0xf, 0xf0, 0x7, 0xe0,
    0x7, 0xe0, 0x3, 0xc0, 0x3, 0xe0, 0x7, 0xe0,
    0xf, 0xf0, 0xf, 0xf0, 0x1e, 0x78, 0x1e, 0x78,
    0x3c, 0x3c, 0x3c, 0x3c, 0x7c, 0x3e, 0x78, 0x1e,
    0x78, 0x1e,

    /* U+0059 "Y" */
    0x78, 0x1e, 0x78, 0x1e, 0x78, 0x1e, 0x3c, 0x3c,
    0x3c, 0x3c, 0x3c, 0x3c, 0x1e, 0x78, 0x1e, 0x78,
    0xf, 0xf0, 0xf, 0xf0, 0x7, 0xe0, 0x7, 0xe0,
    0x3, 0xc0, 0x3, 0xc0, 0x3, 0xc0, 0x3, 0xc0,
    0x3, 0xc0, 0x3, 0xc0, 0x3, 0xc0, 0x3, 0xc0,
    0x3, 0xc0,

    /* U+005A "Z" */
    0x7f, 0xfb, 0xff, 0xdf, 0xfe, 0x1, 0xe0, 0xf,
    0x0, 0xf0, 0xf, 0x80, 0x78, 0x7, 0xc0, 0x3c,
    0x3, 0xe0, 0x1e, 0x1, 0xf0, 0xf, 0x0, 0xf8,
    0x7, 0x80, 0x7c, 0x3, 0xc0, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0x80
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc_u32[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 256, .box_w = 1, .box_h = 1, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1, .adv_w = 256, .box_w = 4, .box_h = 10, .ofs_x = 6, .ofs_y = 13},
    {.bitmap_index = 6, .adv_w = 256, .box_w = 9, .box_h = 3, .ofs_x = 4, .ofs_y = 7},
    {.bitmap_index = 10, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 47, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 82, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 117, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 152, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 189, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 224, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 259, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 294, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 331, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 366, .adv_w = 256, .box_w = 16, .box_h = 21, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 408, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 443, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 480, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 515, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 550, .adv_w = 256, .box_w = 12, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 582, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 619, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 654, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 689, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 724, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 761, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 796, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 833, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 868, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 905, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 940, .adv_w = 256, .box_w = 14, .box_h = 26, .ofs_x = 1, .ofs_y = -5},
    {.bitmap_index = 986, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1023, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 2, .ofs_y = 0},
    {.bitmap_index = 1058, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1095, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1132, .adv_w = 256, .box_w = 16, .box_h = 21, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1174, .adv_w = 256, .box_w = 14, .box_h = 21, .ofs_x = 1, .ofs_y = 0},
    {.bitmap_index = 1211, .adv_w = 256, .box_w = 16, .box_h = 21, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1253, .adv_w = 256, .box_w = 16, .box_h = 21, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1295, .adv_w = 256, .box_w = 13, .box_h = 21, .ofs_x = 1, .ofs_y = 0}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint16_t unicode_list_0_u32[] = {
    0x0, 0x7, 0xd
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps_u32[] =
{
    {
        .range_start = 32, .range_length = 14, .glyph_id_start = 1,
        .unicode_list = unicode_list_0_u32, .glyph_id_ofs_list = NULL, .list_length = 3, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
    },
    {
        .range_start = 48, .range_length = 10, .glyph_id_start = 4,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    },
    {
        .range_start = 65, .range_length = 26, .glyph_id_start = 14,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LVGL_VERSION_MAJOR == 8
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t cache_u32;
#endif

#if LVGL_VERSION_MAJOR >= 8
static const lv_font_fmt_txt_dsc_t font_dsc_u32 = {
#else
static lv_font_fmt_txt_dsc_t font_dsc_u32 = {
#endif
    .glyph_bitmap = glyph_bitmap_u32,
    .glyph_dsc = glyph_dsc_u32,
    .cmaps = cmaps_u32,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 3,
    .bpp = 1,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LVGL_VERSION_MAJOR == 8
    .cache = &cache_u32
#endif
};



/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LVGL_VERSION_MAJOR >= 8
const lv_font_t ubuntu_32 = {
#else
lv_font_t ubuntu_32 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 28,          /*The maximum line height required by the font*/
    .base_line = 5,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = -4,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc_u32,          /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
#if LV_VERSION_CHECK(8, 2, 0) || LVGL_VERSION_MAJOR >= 9
    .fallback = NULL,
#endif
    .user_data = NULL,
};



#endif /*#if UBUNTU_32*/

